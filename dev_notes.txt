2023/05/22-23
    - extracted species from Organism for Coronaviridae
    - contained reference from VAZymolo 1 into a python dictionary 
            *data[Organism_Tax_id][CAZy_DB_id]["annotation"] = list([Annotation_tab, lineNumber])
                    //               //       ["subseq"][composition_lineNumber] = modulo_id
    - decided and defined the structure of Vazymolo 2 database (testymolo)
            *Modulo:
                PK  id: vazymolo 1 Modo_familiy_id
                    activity: "#.#.#.#" ExplorEnz EC classification
                    moduloFamily (choiceField) : type of module  (ex: F M S DIS TM ...)
            *Profile:
                PK  id
                    validated (bool) 
                FK  Modulo CASCADE
            *Organism:
                PK  id: Tax_id
                    name: abbreviate name
                    phylogeny: absolute path
            *Protein:
                PK  id: intern accession number  # line number in multifasta file
                FK  Organism PROTECT
                    name: used name
                    data_ac: VAZyMolO 1 CAZy_DB_id  #old  #safeKeeping
            *Protein_ALT:
                FK  Organism PROTECT
                    name
                    data_ac
                    header: #fasta
                    sequence: #fasta
            *Subseq:
                FK  Protein CASCADE
                FK  profile SET_NULL
                    start (int)
                    end (int)
            *Structure:
                PK  id: PDB_id
                FK  Modulo CASCADE
                    reference (bool)
            *Annotation:
                FK  Modulo CASCADE
                    tab: annotation table
                    data_ac: lineNumber in csv file
                FK  origin: ForeignKey(Subseq) SET_NULL
                    start_origin (int)
                    end_origin (int)
                    start_profile (int)
                    end_profile (int)

    - overall multifasta for concerned protein sequences
    - make migration (build-in: python to sql)

    + sequence access test : 
        -> get sequence in file 
        -> get sequence in object
    + taxonkit: retreive official phylo from any taxon
        -> PhyML: produce "real" phylo tree by alignment and dataset
    + Diamond (aligner) : replace BLAST ? 
        -> CAZY are making the change ? Why aren't we ? 
    + EC => ExplorEnz classification
        -> ideal for our activity field 
    + django models ForeignKey on_delete:
        -> CASCADE : if delete object -> delete all objects that reference it
        -> PROTECT : Need to delete all objects that reference the object to delete
        -> SET_NULL : set the referenced field to NULL , if only null is True
    ? validate le profile 
    ? moduloFamily real meaning

2023/05/31
    + specific treatment for each type of Annotation
        -> Prot_Infos
            * just loads of comments
        -> Prot_MOTIF
            * add table Motifs (META{Annotation})
                    name, regex, activity, phylogeny specific, 
            * add Annotation__{limits} (int), Annotation__note
        -> Method
            * guiding list of Modulo 
            * 


2023/06/01
    + add table Genome 
            * one-to-one Organism
            * FK : Protein__coded_by
            * association class: Genome--Protein
    + add table PolyProtein
            * association class : Protein--Protein
            * limits according to PP's numbering (int, int) 
            * add Protein__isPP (bool)
            * add Protein__derivedFromPP (bool)
    + add table Meta{Annotation}
            * generalized info on annotation
        -> Annotation => association class : subseq--Meta{Annotation} 
    
    ? inqueiry : repr modules in Protein scheme 
        -> Organism -> Protein__isPP -> Protein -> Subseq -> Profile -> Module
    

2023/06/05
    - finish parse_Modules
    - finish parse_Annotations....

    + put all to polyprotein 
        -> every 'nsp' as test pool 
        -> cuz' not subseq in 'nsp'
    + correct parse_Annotations
        -> then figure in JS 
            -> add genome and CDS (wait I haven't messed up)


27/06/2023
    + add IBS.js => produce figures
        -> package_path: " {% static %} /js/IBS.js/"
        -> main: "IbsCharts.js"

    + TnT (PMID: 27153646)